{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/intercom/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;IA+Bb,4BAAiB;;;;IAE7C;;;;OAIG;;;;;;IAEH,yCAAsB;;;;;cAAC,OAAY,IAAkB,MAAM,CAAC,EAAE;IAE9D;;;;OAIG;;;;;;IAEH,2CAAwB;;;;;cAAC,OAAY,IAAkB,MAAM,CAAC,EAAE;IAEhE;;;OAGG;;;;;IAEH,wBAAK;;;;kBAAmB,MAAM,CAAC,EAAE;IAEjC;;;;;;OAMG;;;;;;;;IAEH,gCAAa;;;;;;;cAAC,UAAkB,EAAE,UAAe,IAAkB,MAAM,CAAC,EAAE;IAE5E;;;;OAIG;;;;;;IAEH,8BAAW;;;;;cAAC,UAAkB,IAAkB,MAAM,CAAC,EAAE;IAEzD;;;;OAIG;;;;;;IAEH,6BAAU;;;;;cAAC,UAAe,IAAkB,MAAM,CAAC,EAAE;IAErD;;;;;OAKG;;;;;;;IAEH,2BAAQ;;;;;;cAAC,SAAiB,EAAE,QAAa,IAAkB,MAAM,CAAC,EAAE;IAEpE;;;OAGG;;;;;IAEH,mCAAgB;;;;kBAAmB,MAAM,CAAC,EAAE;IAE5C;;;OAGG;;;;;IAEH,yCAAsB;;;;kBAAmB,MAAM,CAAC,EAAE;IAElD;;;;OAIG;;;;;;IAEH,2DAAwC;;;;;cAAC,cAAsB,IAAkB,MAAM,CAAC,EAAE;IAE1F;;;OAGG;;;;;IAEH,2CAAwB;;;;kBAAmB,MAAM,CAAC,EAAE;IAEpD;;;OAGG;;;;;IAEH,0CAAuB;;;;kBAAmB,MAAM,CAAC,EAAE;IAEnD;;;;OAIG;;;;;;IAEH,wCAAqB;;;;;cAAC,UAAkB,IAAkB,MAAM,CAAC,EAAE;IAEnE;;;;OAIG;;;;;;IAEH,4CAAyB;;;;;cAAC,UAAkB,IAAkB,MAAM,CAAC,EAAE;IAEvE;;;OAGG;;;;;IAEH,gCAAa;;;;kBAAmB,MAAM,CAAC,EAAE;IAEzC;;;OAGG;;;;;IAEH,kCAAe;;;;kBAAmB,MAAM,CAAC,EAAE;;gBA7H5C,UAAU;;;QAQR,OAAO,EAAE;;;;0DACoD;;QAO7D,OAAO,EAAE;;;;4DACsD;;QAM/D,OAAO,EAAE;;;;yCACuB;;QAShC,OAAO,EAAE;;;;iDACkE;;QAO3E,OAAO,EAAE;;;;+CAC+C;;QAOxD,OAAO,EAAE;;;;8CAC2C;;QAQpD,OAAO,EAAE;;;;4CAC0D;;QAMnE,OAAO,EAAE;;;;oDACkC;;QAM3C,OAAO,EAAE;;;;0DACwC;;QAOjD,OAAO,EAAE;;;;4EACgF;;QAMzF,OAAO,EAAE;;;;4DAC0C;;QAMnD,OAAO,EAAE;;;;2DACyC;;QAOlD,OAAO,EAAE;;;;yDACyD;;QAOlE,OAAO,EAAE;;;;6DAC6D;;QAMtE,OAAO,EAAE;;;;iDAC+B;;QAMxC,OAAO,EAAE;;;;mDACiC;;;;;;;;;;;;;;;;;;;;;;IA5HhC,QAAQ;QARpB,MAAM,CAAC;YACN,UAAU,EAAE,UAAU;YACtB,MAAM,EAAE,yBAAyB;YACjC,SAAS,EAAE,UAAU;YACrB,IAAI,EAAE,8CAA8C;YACpD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,QAAQ,EA8HpB;mBA9JD;EAgC8B,iBAAiB;SAAlC,QAAQ","sourcesContent":["import { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @name Intercom\n * @description\n * This is a plugin that allows your Ionic app to use Intercom for iOS and/or Intercom for Android.\n * Follow the offical documentation to setup this plugin correctly: https://developers.intercom.com/docs/cordova-phonegap-configuration\n *\n * @usage\n * ```typescript\n * import { Intercom } from '@ionic-native/intercom';\n *\n *\n * constructor(private intercom: Intercom) { }\n *\n * ...\n *\n * this.intercom.registerUnidentifiedUser();\n * ...\n * this.intercom.registerForPush();\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Intercom',\n  plugin: 'cordova-plugin-intercom',\n  pluginRef: 'intercom',\n  repo: 'https://github.com/intercom/intercom-cordova',\n  platforms: ['Android', 'iOS'],\n})\n@Injectable()\nexport class Intercom extends IonicNativePlugin {\n\n  /**\n   * Register a identified user\n   * @param options {any} Options\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  registerIdentifiedUser(options: any): Promise<any> { return; }\n\n  /**\n   * Register a unidentified user\n   * @param options {any} Options\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  registerUnidentifiedUser(options: any): Promise<any> { return; }\n\n  /**\n   * This resets the Intercom integration's cache of your user's identity and wipes the slate clean.\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  reset(): Promise<any> { return; }\n\n  /**\n   *\n   * @param secureHash {string}\n   * @param secureData {any}\n   * @return {Promise<any>} Returns a promise\n   * @deprecated Use setUserHash instead as of Intercom Cordova 4.0.0 and higher https://github.com/intercom/intercom-cordova/blob/master/CHANGELOG.md#400-2017-08-29\n   */\n  @Cordova()\n  setSecureMode(secureHash: string, secureData: any): Promise<any> { return; }\n\n  /**\n   *\n   * @param secureHash {string}\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  setUserHash(secureHash: string): Promise<any> { return; }\n\n  /**\n   *\n   * @param attributes {any}\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  updateUser(attributes: any): Promise<any> { return; }\n\n  /**\n   *\n   * @param eventName {string}\n   * @param metaData {any}\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  logEvent(eventName: string, metaData: any): Promise<any> { return; }\n\n  /**\n   *\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  displayMessenger(): Promise<any> { return; }\n\n  /**\n   *\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  displayMessageComposer(): Promise<any> { return; }\n\n  /**\n   *\n   * @param initialMessage {string}\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  displayMessageComposerWithInitialMessage(initialMessage: string): Promise<any> { return; }\n\n  /**\n   *\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  displayConversationsList(): Promise<any> { return; }\n\n  /**\n   *\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  unreadConversationCount(): Promise<any> { return; }\n\n  /**\n   *\n   * @param visibility {string}\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  setLauncherVisibility(visibility: string): Promise<any> { return; }\n\n  /**\n   *\n   * @param visibility {string}\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  setInAppMessageVisibility(visibility: string): Promise<any> { return; }\n\n  /**\n   *\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  hideMessenger(): Promise<any> { return; }\n\n  /**\n   *\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  registerForPush(): Promise<any> { return; }\n\n}\n"]}